/*--------------------------------------------------------------*\
  			#ALL PAGES - mixins
  	Usage
  	-----
  	1. Use @include <mixin-name>(specify according to mixins)

  	eg: @include border-radius(50%)

\*---------------------------------------------------------------*/

/*-------------------------------------------------
 MIXIN :: CLEARFIX
-------------------------------------------------*/
@mixin clearfix() {
	clear: both;
    &:before,
    &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
}

/*-------------------------------------------------
 MIXIN :: PIXEL TO EM CONVERTOR
-------------------------------------------------*/
$browser-context: 16; // Default
@function em($pixels, $context: $browser-context) {
  @return #{$pixels/$context}em
}

/*-------------------------------------------------
 MIXIN :: BORDER RADIUS
-------------------------------------------------*/
@mixin borderRadius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  	  border-radius: $radius;
}
@mixin borderRadiusCombination($top-left, $top-right, $bottom-right, $bottom-left) {
  -webkit-border-radius: $top-left $top-right $bottom-right $bottom-left;
  -moz-border-radius: $top-left $top-right $bottom-right $bottom-left;
  -ms-border-radius: $top-left $top-right $bottom-right $bottom-left;
  	  border-radius: $top-left $top-right $bottom-right $bottom-left;
}

/*-------------------------------------------------
 MIXIN :: TRANSITION
-------------------------------------------------*/
@mixin transition($transition-property, $transition-time, $method) {
    -webkit-transition: $transition-property $transition-time $method;
    -moz-transition: $transition-property $transition-time $method;
    -ms-transition: $transition-property $transition-time $method;
    -o-transition: $transition-property $transition-time $method;
    transition: $transition-property $transition-time $method;
}

/*-------------------------------------------------
 MIXIN :: BOX SHADOW
-------------------------------------------------*/
@mixin boxShadow($top, $left, $blur, $color, $inset: false) {
  @if $inset {
    -webkit-box-shadow:inset $top $left $blur $color;
    -moz-box-shadow:inset $top $left $blur $color;
    box-shadow:inset $top $left $blur $color;
  } @else {
    -webkit-box-shadow: $top $left $blur $color;
    -moz-box-shadow: $top $left $blur $color;
    box-shadow: $top $left $blur $color;
  }
}

/*-------------------------------------------------
 MIXIN :: SCALE - TRANSFORM
-------------------------------------------------*/
@mixin scale($scale) {
  transform: scale($scale);
  -moz-transform: scale($scale);
  -webkit-transform: scale($scale);
}

/*-------------------------------------------------
 MIXIN :: ROTATE - TRANSFORM
-------------------------------------------------*/
@mixin rotate($rotate) {
  transform: rotate($rotate);
  -moz-transform: rotate($rotate);
  -webkit-transform: rotate($rotate);
}

/*-------------------------------------------------
 MIXIN :: POSITION
-------------------------------------------------*/
// for position top, right, bottom, left alignment
@mixin position-margin($pos, $top, $right, $bottom, $left) {
	position: $pos;
	top: $top;
	right: $right;
	bottom: $bottom;
	left: $left;
}

// for border radius
@mixin border-radius($percent) {
	-webkit-border-radius: $percent;
	-moz-border-radius: $percent;
	border-radius: $percent;
}

// for box shadow $horiz-shadow, verti-shadow, blur, spread
@mixin box-shadow($h, $v, $blur, $spread, $r, $g ,$b , $a) {
	-webkit-box-shadow: $h $v $blur $spread rgba($r, $g, $b, $a);
	-moz-box-shadow: $h $v $blur $spread rgba($r, $g, $b, $a);
	-ms-box-shadow: $h $v $blur $spread rgba($r, $g, $b, $a);
	-o-box-shadow: $h $v $blur $spread rgba($r, $g, $b, $a);
	box-shadow: $h $v $blur $spread rgba($r, $g, $b, $a);
}

//for transition
@mixin transition($prop, $duration, $fnc){
	-webkit-transition: $prop $duration $fnc;
	-moz-transition: $prop $duration $fnc;
	-ms-transition: $prop $duration $fnc;
	-o-transition: $prop $duration $fnc;
	transition: $prop $duration $fnc;
}

//for transform
@mixin transform($x, $y, $fnc) {
	-webkit-transform: $prop $duration $fnc;
	-moz-transform: $prop $duration $fnc;
	-ms-transform: $prop $duration $fnc;
	-o-transform: $prop $duration $fnc;
	transform: $prop $duration $fnc;
}

//for transform scale
@mixin transform-scale($size) {
	-webkit-transform: scale($size);
	-moz-transform: scale($size);
	-ms-transform: scale($size);
	-o-transform: scale($size);
	transform: scale($size);
}

//for transform translate
@mixin transform-translate($x, $y) {
	-webkit-transform: translate($x, $y);
	-moz-transform: translate($x, $y);
	-ms-transform: translate($x, $y);
	-o-transform: translate($x, $y);
	transform: translate($x, $y);
}